version: "3.9"

services:
  provider:
    build: .
    command: |
      bash -c 'cd provider && uvicorn app.provide.main:app --host 0.0.0.0 --port 8000 --reload'
    ports:
      - "8000:8000"
    volumes:
      - ./provider:/app/provider
    env_file:
      - .env
    depends_on:
      - redis
      - rabbitmq
    restart: unless-stopped

  aggregator:
    build: .
    command: |
      bash -c 'cd aggregator && python main.py'
    volumes:
      - ./aggregator:/app/aggregator
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  redis:
    image: redis:8.2-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "36379:6379"
    volumes:
      - "redis-data:/data"

  rabbitmq:
    image: rabbitmq:4.1-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-guest}
    volumes:
      - "rabbitmq-data:/var/lib/rabbitmq"
      - ./scripts:/scripts
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5
    command: |
      sh -c '
        # Start RabbitMQ in background
        rabbitmq-server &
        RABBIT_PID=$$!
        
        # Wait for RabbitMQ to start
        echo "Waiting for RabbitMQ to start..."
        sleep 10
        
        # Run setup script
        chmod +x /scripts/rabbit-init.sh
        /scripts/rabbit-init.sh
        
        # Wait for RabbitMQ to keep running
        wait $$RABBIT_PID
      '

volumes:
  redis-data:
    driver: local
  rabbitmq-data:
    driver: local